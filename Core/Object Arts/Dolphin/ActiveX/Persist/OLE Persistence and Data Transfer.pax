| package |
package := Package name: 'OLE Persistence and Data Transfer'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk OLE Persistence and Data Transfer Package. 
Copyright (c) Object Arts Ltd 1998-2001.

OLE persistence to structure storage, streams, memory, property bags, etc, and also uniform data transfer. Mainly wrapper classes for COM interfaces and structs.

This package is a "Work In Progress".'.

package basicPackageVersion: '6.1'.


package classNames
	add: #BIND_OPTS;
	add: #BIND_OPTS2;
	add: #BINDINFO;
	add: #DVTARGETDEVICE;
	add: #FORMATETC;
	add: #IAdviseSink;
	add: #IAdviseSink2;
	add: #IAdviseSinkEx;
	add: #IBindCtx;
	add: #IBindHost;
	add: #IBinding;
	add: #IBindStatusCallback;
	add: #IDataObject;
	add: #IEnumMoniker;
	add: #IMoniker;
	add: #IParseDisplayName;
	add: #IRunningObjectTable;
	add: #STATDATA;
	add: #STGMEDIUM;
	yourself.

package methodNames
	add: #OLELibrary -> #createBindCtx:ppbc:;
	add: #OLELibrary -> #createFileMoniker:ppmk:;
	add: #OLELibrary -> #createItemMoniker:lpszItem:ppmk:;
	add: #OLELibrary -> #createPointerMoniker:ppmk:;
	add: #OLELibrary -> #getRunningObjectTable:pprot:;
	add: #OLELibrary -> #releaseStgMedium:;
	yourself.

package globalNames
	add: #OLEPersistConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\Base\Dolphin';
	add: '..\COM\OLE COM';
	add: 'OLE Persistence Base';
	add: '..\Structured Storage\OLE Structured Storage';
	yourself).

package!

"Class Definitions"!

IUnknown subclass: #IAdviseSink
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IBindCtx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IBindHost
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IBinding
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IBindStatusCallback
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IDataObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IParseDisplayName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IRunningObjectTable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IAdviseSink subclass: #IAdviseSink2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IAdviseSink subclass: #IAdviseSinkEx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IEnumUnknown subclass: #IEnumMoniker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IPersistStream subclass: #IMoniker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #BIND_OPTS
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #BINDINFO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #DVTARGETDEVICE
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #FORMATETC
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #STATDATA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BIND_OPTS subclass: #BIND_OPTS2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEFinalizableStructure subclass: #STGMEDIUM
	instanceVariableNames: 'value'
	classVariableNames: 'GetSelectors'
	poolDictionaries: 'OLEPersistConstants'
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!OLELibrary methodsFor!

createBindCtx: reserved ppbc: piBindCtx
	"Create a Bind Context Object, answering an IBindCtx interface on it through the out
	parameter, piBindCtx.

		HRESULT CreateBindCtx(
			DWORD reserved,		// Must be 0
 			LPBC FAR* ppbc 		// IBindCtx output
		);"

	<stdcall: hresult CreateBindCtx dword lppvoid>
	^self invalidCall!

createFileMoniker: path ppmk: anIMoniker
	"Create a File Moniker on the path, answering it through 
	the out paramer, anIMoniker.
		HRESULT CreateFileMoniker(
			LPCOLESTR lpszPathName,
			LPMONIKER FAR *ppmk
		);"

	<stdcall: hresult CreateFileMoniker lpwstr lppvoid>
	^self invalidCall!

createItemMoniker: separatorString lpszItem: lpszItem ppmk: ppmk
	"Create an Item Moniker."

	<stdcall: hresult CreateItemMoniker lpwstr lpwstr lppvoid>
	^self invalidCall!

createPointerMoniker: anIUnknown ppmk: anIMoniker
	"Create a pointer moniker on the specified IUnknown, answering it through 
	the out paramer, anIMoniker.
		WINOLEAPI CreatePointerMoniker(
			LPUNKNOWN punk,	//Pointer to the interface to be used
			LPMONIKER FAR *ppmk	//Indirect pointer to the moniker
		);"

	<stdcall: hresult CreatePointerMoniker IUnknown* lppvoid>
	^self invalidCall!

getRunningObjectTable: reserved pprot: pprot
	"Get an IRunningObjectTable on the ROT
		WINOLEAPI GetRunningObjectTable(
			DWORD reserved,
			LPRUNNINGOBJECTTABLE *pprot
		);"

	<stdcall: hresult GetRunningObjectTable dword IRunningObjectTable**>
	^self invalidCall!

releaseStgMedium: aSTGMEDIUM
	"Free the STGMEDIUM argument in the appropriate way for the type of data it contains.
		void ReleaseStgMedium(
			STGMEDIUM * pmedium	//Pointer to storage medium to be freed
		);"

	<stdcall: void ReleaseStgMedium STGMEDIUM* >
	^self invalidCall! !
!OLELibrary categoriesFor: #createBindCtx:ppbc:!OLE Functions-Persistent Objects!private! !
!OLELibrary categoriesFor: #createFileMoniker:ppmk:!OLE Functions-Persistent Objects!public! !
!OLELibrary categoriesFor: #createItemMoniker:lpszItem:ppmk:!OLE Functions-Persistent Objects!public! !
!OLELibrary categoriesFor: #createPointerMoniker:ppmk:!OLE Functions-Persistent Objects!primitives!private! !
!OLELibrary categoriesFor: #getRunningObjectTable:pprot:!OLE Functions-OLE!public! !
!OLELibrary categoriesFor: #releaseStgMedium:!**auto generated**!OLE Functions-Uniform Data Transfer!public! !

"End of package definition"!

